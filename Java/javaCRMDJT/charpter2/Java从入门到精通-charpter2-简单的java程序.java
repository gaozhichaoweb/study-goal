java从入门到精通
第二章：简单的java程序
	2.1 一个简单的例子
		范例：TestJava2_1.java
			public class TestJava2_1
			{
				public static void main(String[] args)
				{
					int num;  //声明一个整型变量num
					num = 3;  //将整型变量赋值为3
					
					System.out.println("这个数字 "+num);  //输出字符串，使用"+"号连接变量
					System.out.println("我有 "+num+" 本书！");
				}
			}
		代码详解：
			java语言的注释是以"//"标志开始的，注释在编译时不会被执行
			public class TestJava2_1{}
				public: 表示该类为共有，也就是在整个程序里都可以访问到它
				class: 表示"类"的意思，后面接上类名称
				如果将一个类声明成public，则也要将文件名称取成和这个类一样的名称
			public static void main(String[] args)
				程序运行的起点，功能类似于一般程序语言中的函数，在java中称为method(方法)
				每一个独立的java程序一定要有main()方法才能运行，因为它是程序开始运行的起点
			int num
				声明num为一个整数类型的变量，在使用变量之前必须先声明其类型
			num=3
				赋值语句，把整数3赋给存放整数的变量num
			System.out.println("这个数字 "+num)
				在显示器上输出引号内所有的内容
				System.out是指标准输出，通常与计算机的接口设备有关，如打印机，显示器等。
				println()是由print与line所组成的，意思是将后面括号中的内容打印在设备上，语句执行完后会换行
				System.out.print()不换行
	2.2 感性认识java程序
		基本规则及用法
		2.2.1 认识java程序的框架
			1.大括号、段及主体
				将类名称定义后，开始编写类的内容，以"{"为类的主体开始标记,以"}"结束
				每个命令语句结束时，必须以分号";"做结尾
				某个命令语句不止一行时，必须以一对大括号"{}"包括起来，形成一个程序段或是块
				范例：
					public class TestJava2_2
					{
						public static void main(String[] args)
						{
							int x;
							for(x=1;x<3;x++){
								System.out.println("这个数字 "+num);
							}
						}
					}
				解析：
					java程序是由一个或一个以上的类组合而成
					java程序中有且只能有一个Main()方法
					main()方法之前必须加上 public static void 这3个标识符
						public 代表共有的方法
						static 表示main()在没有创建类对象的情况下，仍然可以被运行
						void 表示main()方法没有返回值
						String args[] 表示运行该程序时所需要的参数，这是固定的用法
		2.2.2 标识符
			java中的包、类、方法、参数和变量的名字，可以由任意顺序的大小写字母、数字、下划线和美元符号组成
			但标识符不能以数字开头，不能是Java中的保留关键字
		2.2.3 关键字(也叫保留字)
		2.2.4 注释
			单行注释：注释内容前加双斜线"//"
			多行注释："/*      */"
			文档注释："/**     */"
		2.2.5 变量
			变量可以用来存放数据，使用变量前则必须先声明它所预保存的数据类型
			1.变量声明：
				int num;
				int 为Java的关键字，代表整数的声明
			2.变量名称
				以变量所代表的意义来取名，不能使用关键字
			3.变量的设置
				给变量赋值，用等号运算符"="来实现
				三种设置方法：
					在声明变量时设置：
						int num=2;
					声明后再设置：
						int num;
						num = 2;
					在程序使用变量前声明并设置
		2.2.6 认识数据类型
			整型(int)、长整型(long)、段整型(short)、浮点型(float)、双精度浮点型(double)、字符型(char)和字符串型(String)等
		2.2.7 认识运算符和表达式
			运算符：+-*/
			表达式：是由操作数与运算符所组成，操作数可以是常量、变量或方法。
		2.2.8 认识类
			Java程序是由类(class)所组成
	2.3 程序的检测
		2.3.1 语法错误
			当编译程序发现程序语法错误时，会把这些错误的位置指出了
		2.3.2 语义错误(逻辑错误)
	2.4 提高程序的可读性
		按照某个编程规范来编写
		注释+缩进	