java从入门到精通p126
第8章：数组
	数组是由一组相同类型的变量所组成的数据类型，它们以一个共同的名称表示
	数组中的个别元素则以标注来表示其存放位置
	8.1 一维数组
		数组是有序数据的集合，每个元素具有相同的数据类型
		可以用一个统一的数组名和下标来唯一地确定数组中的元素
		8.1.1 一维数组的声明与内存的分配
			使用Java的数组，必须经过以下两个步骤：
				声明数组
				分配内存给该数组
			语法：
				数据类型 数组名[];   //声明一维数组
				数组名 = new 数据类型[个数];  //分配内存给数组
			其中"个数"是告诉编译器，所声明数组要存放多少个元素
			而"new"则是命令编译器根据括号里的个数，在内存开辟一块内存供该数组使用
			实例：
				int score[];
				score = new int[3];
			解析：
				当声明一个整型数组score时，可将score视为数组类型的变量，编译器会分配一块内存给它，用来保存指向数组实体的地址
				声明后，开辟3个可供保存整数的内存空间，并把此内存空间的参考地址赋给score变量
			数组是属于非基本数据类型，因此数组变量score所保存的并非是数组的实体，而是数组实体的参考地址。
			间接方式：
				int score[] = new int[3];
			由于整数数据类型占用空间为4个字节(bytes),而score可保持元素有3个，所以例子中占用的内存共有4×3=12个字节
		8.1.2 数组中元素的表示方法	
			使用数组里的元素，可以利用索引来完成，索引编号从0开始
			score[0],score[2]
			score.length:数组的长度，也就是元素的个数
		8.1.3 数组初值的赋值
			声明时就对数组赋值，可以利用大括号"{}"完成
			int day[] = {33,22,11,66};
			也可以先声明后赋值
			int day[] = new int[];
			day[0] = 22;
			day[3] = 33;
			day[8] = 88;
		8.1.4 数组应用
			//求最大和最小值
			int i,min,max;
			int A[] = {56,28,36,82,22};
			min=max=A[0];
			System.out.println("array A has:");
			for(i=0;i<A.length;i++){
				System.out.println("  A["+i+"]="+A[i]);
				if(A[i]>max){
					max = A[i];
				}
				if(A[i]<min){
					min = A[i];
				}
			}
		8.1.5 与数组操作有关的API方法
			数组拷贝：System.arraycopy()
			数组排序：Arrays.sort(a)
				Arrays.sort()这个方法在Java.util这个包里面，使用前先导入
				import java.util.*;
	8.2 二维数组
		8.2.1 二维数组的声明与分配内存
			常规方法：
				int num[][];
				num[][] = new int[][];
			简介方法：
			int num[][] = {
				{11,22,33},
				{55,66,77}
			}
			java运行二维数组中每行的元素个数均不相同
			取得二维数组的行数与特定行的元素的个数
				num.length  //取得数组的行数
				num[1].length  //取得第2行的元素个数
		8.2.2 二维数组元素的引用及访问与一维数组一样
			
			
			
			
			
			
			
			
			
			
			
			
		
		
		
		
		
		
		